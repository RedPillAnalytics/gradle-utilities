plugins {
   id 'groovy'
   id 'maven-publish'
   id "pl.allegro.tech.build.axion-release" version "1.10.0"
   id "com.github.breadmoirai.github-release" version "2.2.4"
   id "com.github.ben-manes.versions" version "0.20.0"
   id "com.redpillanalytics.gradle-analytics" version "1.1.20"
   id "com.jfrog.bintray" version "1.8.4"
}

// send analytics
analytics {
   organization = 'Red Pill Analytics'
   sinks {
      pubsub
   }
}

//set Gradle version to SCM Version
allprojects {
   project.version = scmVersion.version
   group = 'com.redpillanalytics'
}

githubRelease {

   token = githubToken
   owner = 'RedPillAnalytics'
   repo = rootProject.name
   tagName = "v${version}"
   releaseAssets = fileTree(dir: buildDir, includes: ["**/*${version}*", "**/*${version}*.jar"]).toList()
}

dependencies {

   compile gradleApi()
   compile localGroovy()

   compile group: 'org.slf4j', name: 'slf4j-simple', version: '+'
   compile group: 'org.eclipse.jgit', name: 'org.eclipse.jgit', version: '+'

   testCompile 'org.spockframework:spock-core:1.2-groovy-2.5'
}

repositories {
   jcenter()
   maven {
      url "https://plugins.gradle.org/m2/"
   }
   maven {
      url releaseUrl
      authentication {
         awsIm(AwsImAuthentication)
      }
   }
   maven {
      url snapshotUrl
      authentication {
         awsIm(AwsImAuthentication)
      }
   }
}

publishing {
   publications {
      maven(MavenPublication) {
         from components.java
      }
   }
   repositories {
      maven {
         url project.version.endsWith('-SNAPSHOT') ? snapshotUrl : releaseUrl
         authentication {
            awsIm(AwsImAuthentication)
         }
      }
   }
}

// Options for all tests
tasks.withType(Test) {
   ignoreFailures true
   testLogging.showStandardStreams true
   systemProperty 'projectDir', temporaryDir
}


task('cleanJunit', type: Delete) {

   delete getTestResultsDir()
}

ext.bucket = 's3://documentation.redpillanalytics.com'
ext.bucketPath = rootProject.name


task publishDocs {

   description = 'Upload Groovydocs to s3.'
   group = 'documentation'

   doLast {

      exec {
         executable 'aws'
         args 's3', 'sync', groovydoc.destinationDir.getPath(), "${bucket}/${bucketPath}/${version}/"
      }

      exec {
         executable 'aws'
         args 's3', 'sync', groovydoc.destinationDir.getPath(), "${bucket}/${bucketPath}/latest/"
      }
   }

   dependsOn groovydoc
}

publish.dependsOn publishDocs

bintrayPublish.dependsOn bintrayUpload

bintray {
   user = bintrayUser
   key = bintrayKey
   publications = ['maven']
   publish = true
   pkg {
      repo = rootProject.name
      name = rootProject.name
      userOrg = 'redpillanalytics'
      licenses = ['Apache-2.0']
      vcsUrl = 'https://github.com/RedPillAnalytics/gradle-utilities.git'
      version {
         name = project.version
         vcsTag = "v${project.version}"
         released  = new Date()
      }
   }
}

